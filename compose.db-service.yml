name: general-db-services

x-postgres-common:
  &postgres-common
  image: postgres:13
  user: "${POSTGRES_TARGET_UID}:${POSTGRES_TARGET_GID}" 
  environment:
    POSTGRES_USER: ${POSTGRES_USER}
    POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    POSTGRES_DB: ${POSTGRES_DB}
    POSTGRES_HOST: ${POSTGRES_HOST} 
    PGPASSWORD: ${POSTGRES_PASSWORD}
    RESTORE_FILE: ${RESTORE_FILE}
  env_file:
    - .env
  volumes:
    - ${POSTGRES_SERVICE_DIR}/backups:${POSTGRES_CONT_DIR}/backups:rw 
  networks:
    - shared-db-network

services:
  postgres-backup:
    <<: *postgres-common
    restart: no
    command: # docker compose -f compose.db-service.yml run --rm postgres-backup
      - "sh"
      - "-c"
      - > 
        pg_dump -h $$POSTGRES_HOST -U $$POSTGRES_USER -d $$POSTGRES_DB -Fc 
        -f $$POSTGRES_CONT_DIR/backups/$$(date +%Y%m%d)-$$POSTGRES_DB.dump

  postgres-restore:
    <<: *postgres-common
    restart: "no" # Run once and exit
    command: # docker compose -f compose.db-service.yml run --rm postgres-restore
      - "sh"
      - "-c"
      - >
        echo "Attempting to restore $$POSTGRES_DB from $$POSTGRES_CONT_DIR/backups/$$RESTORE_FILE..." &&
        pg_restore -h $$POSTGRES_HOST -U $$POSTGRES_USER -d $$POSTGRES_DB \
                   --clean --if-exists --verbose \
                   "$$POSTGRES_CONT_DIR/backups/$$RESTORE_FILE" &&
        echo "Restore finished." || echo "Restore failed."
  
  postgres-cli:
    <<: *postgres-common
    profiles:
      - debug
    restart: no
    tty: true
    depends_on:
      postgres-backup:
        condition: service_completed_successfully

networks:
  shared-db-network:
    external: true
    name: shared-db-network